#!/usr/bin/env python
"""
Problem 12
08 March 2002

The sequence of triangle numbers is generated by adding the natural numbers. So
the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?

http://projecteuler.net/index.php?section=problems&id=12
"""

def triangles(n):
    for x in xrange(1, n + 1):
        yield sum(xrange(1, x + 1))

def divisors(n):
    for x in xrange(1, int(n**0.5) + 1):
        if n % x == 0:
            yield x
            yield n / x

if __name__ == '__main__':
    for t in triangles(99999):
        d = list(divisors(t))
        if len(d) > 500:
            print t
            break
    